controller:
  config:
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    hsts-preload: "true"
    disable-access-log: "true"
    #log-format-upstream: "$remote_addr - $request - $status - $http_referer - $http_user_agent - $request_headers"
    # server-snippet: |
    #   set_by_lua_block $request_headers{
    #     local h = ngx.req.get_headers()
    #     local request_headers_all = ""
    #     for k, v in pairs(h) do
    #       local rowtext = ""
    #       rowtext = string.format("[%s %s]\n", k, v)
    #       request_headers_all = request_headers_all .. rowtext

    #     end
    #     return request_headers_all
    #   }
  extraVolumeMounts:
  - mountPath: /usr/local/nginx/anti_ddos_challenge.lua
    name: antiddos
    subPath: anti_ddos_challenge.lua
  extraVolumes:
  - hostPath:
      path: /etc/nginx/lua/plugins
    name: antiddos
  kind: DaemonSet
  hostPort:
    enabled: true
  hostNetwork: true
  tolerations:
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 5
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 5
  - key: app-nextcloud
    operator: Equal
    value: "true"
    effect: NoExecute
  service:
    type: ClusterIP
    enabled: true
tcp:
  53: "dns/powerdns-service-dns:dns-tcp::PROXY"
udp:
  53: "dns/powerdns-service-dns:dns-udp"
