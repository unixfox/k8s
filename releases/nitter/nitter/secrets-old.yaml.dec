secret:
    HMAC_KEY: eequi9goe1xei7Biz3wiujai6ooxah
nitter:
    ingress:
        annotations:
            nginx.ingress.kubernetes.io/server-snippet: |
                js_import main from /etc/nginx/antibotsimple.js;
                location ~ / {
                if ($host = "mobile.nitter.unixfox.eu") { return 301 https://nitter.unixfox.eu$request_uri; }
                if ($request_method = OPTIONS ) { return 200; }
                if ($request_method = HEAD ) { return 200; }
                if ($http_connection = "close") { set $block true; }
                if ($http_Accept_Language = "") { set $block true; }
                if ($http_Accept = "") { set $block true; }
                if ($http_Accept_Encoding = "") { set $block true; }
                if ($uri = "/about") { set $block false; }
                #if ($uri ~ "/pic/(.*)") { set $block false; }
                if ($block = true) { return 403; }
                #if ($uri ~ "/video/(.*)") { set $redirect true; }
                #if ($host = "nitter.unixfox.eu") { set $redirect false; }
                #if ($redirect = true) { return 302 https://static.nitter.unixfox.eu$request_uri; }
                if ($uri = "/elonmusk/with_replies") { proxy_pass http://nitter.nitter.svc.cluster.local:8080; }
                if ($uri = "/about") { proxy_pass http://nitter.nitter.svc.cluster.local:8080; }
                js_content main.hello;
                }
                location @finalapp {
                more_set_headers 'alt-svc: h2="ingress.yewtu.be:443"; ma=86400';
                more_set_headers "X-Content-Type-Options: nosniff";
                more_set_headers "X-Frame-Options: SAMEORIGIN";
                more_set_headers "X-Xss-Protection: 1; mode=block";
                more_set_headers "Content-Security-Policy: default-src 'none'; script-src 'self' 'unsafe-inline'; img-src 'self' https://*.nitter.unixfox.eu; style-src 'self' 'unsafe-inline'; font-src 'self'; object-src 'none'; media-src 'self' blob: https://*.nitter.unixfox.eu; worker-src 'self' blob:; base-uri 'self'; form-action 'self'; frame-ancestors 'self'; connect-src 'self' https://*.nitter.unixfox.eu https://*.twimg.com; manifest-src 'self'";
                more_set_headers "Feature-Policy: accelerometer 'none';ambient-light-sensor 'none'; autoplay 'none';camera 'none';encrypted-media 'none';focus-without-user-activation 'none'; geolocation 'none';gyroscope 'none';magnetometer 'none';microphone 'none';midi 'none';payment 'none';picture-in-picture 'none'; speaker 'none';sync-xhr 'none';usb 'none';vr 'none'";
                more_set_headers "Referrer-Policy: no-referrer";
                more_set_headers "X-Robots-Tag: noindex, noarchive, nofollow";
                proxy_next_upstream                     http_429;
                proxy_next_upstream_timeout             0;
                proxy_next_upstream_tries               3;
                proxy_pass http://upstreamnitter;
                }
    secret:
        enabled: true
        files:
            nitterconf:
                data:
                    nitterconf: |-
                        [Server]
                        address = "0.0.0.0"
                        port = 8080
                        https = true  # disable to enable cookies when not using https
                        httpMaxConnections = 100
                        staticDir = "./public"
                        title = "nitter unixfox"
                        hostname = "nitter.unixfox.eu"

                        [Cache]
                        listMinutes = 240  # how long to cache list info (not the tweets, so keep it high)
                        rssMinutes = 10  # how long to cache rss queries
                        redisHost = "nitter-redis"  # Change to "nitter-redis" if using docker-compose
                        redisPort = 6379
                        redisPassword = ""
                        redisConnections = 20  # connection pool size
                        redisMaxConnections = 30
                        # max, new connections are opened when none are available, but if the pool size
                        # goes above this, they're closed when released. don't worry about this unless
                        # you receive tons of requests per second

                        [Config]
                        hmacKey = "eequi9goe1xei7Biz3wiujai6ooxah"  # random key for cryptographic signing of video urls
                        base64Media = false  # use base64 encoding for proxied media urls
                        enableRSS = false  # set this to false to disable RSS feeds
                        enableDebug = true  # enable request logs and debug endpoints
                        proxy = ""  # http/https url, SOCKS proxies are not supported
                        proxyAuth = ""
                        tokenCount = 10
                        # minimum amount of usable tokens. tokens are used to authorize API requests,
                        # but they expire after ~1 hour, and have a limit of 187 requests.
                        # the limit gets reset every 15 minutes, and the pool is filled up so there's
                        # always at least $tokenCount usable tokens. again, only increase this if
                        # you receive major bursts all the time

                        # Change default preferences here, see src/prefs_impl.nim for a complete list
                        [Preferences]
                        theme = "Nitter"
                        replaceTwitter = "nitter.unixfox.eu"
                        replaceYouTube = "yewtu.be"
                        replaceReddit = "old.reddit.com"
                        proxyVideos = true
                        hlsPlayback = true
                        infiniteScroll = true
